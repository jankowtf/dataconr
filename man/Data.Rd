% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/2_super_classes.R
\docType{data}
\name{Data}
\alias{Data}
\title{Superclass for unified data respresentations}
\format{\preformatted{Class 'R6ClassGenerator' <environment: 0x0000000009bc9a30> 
 - attr(*, "name")= chr "Data_generator"
}}
\usage{
Data
}
\description{
TODO
}
\details{
TODO
}
\section{Fields}{

\describe{
\item{\code{data}}{\code{\link{ANY}}
Actual data}

\item{\code{r_format}}{\code{\link{IDataFormat}}
Instance of a class that implements the \code{\link[idata]{IDataFormat}}
interface and that contains meta format information for R.}

\item{\code{ext_format}}{\code{\link{IDataFormat}}
Instance of a class that implements the \code{\link[idata]{IDataFormat}}
interface and that contains meta format information for external data
location.}

\item{\code{order}}{\code{\link{ANY}}
 Data order information (rows and columns currently).}
}}
\section{Getters/setters}{


\itemize{
 \item{See superclass} {
   \code{\link[idata]{IData}}
 }
}
}

\section{Public methods}{


\itemize{
 \item{See interface} {
   \code{\link[idata]{IData}}
 }
}
}
\examples{

# Example data ------------------------------------------------------------

data_r <- data.frame(
  x_1 = seq(10, 20, 5),
  x_2 = seq(as.POSIXct("2015-01-01"), length.out = 3, by = "1 days"),
  x_3 = TRUE,
  stringsAsFactors = FALSE
)
data_ext <- data.frame(
  x.1 = seq(10, 20, 5),
  x.2 = as.character(seq(as.POSIXlt("2015-01-01"), length.out = 3, by = "1 days")),
  x.3 = TRUE,
  stringsAsFactors = FALSE
)

# Example meta format -----------------------------------------------------

r_format <- DataFormat$new(
  format = list(
    function(x, pattern = "\\\\d{4}-\\\\d{2}-\\\\d{2}") {
      tmp <- lapply(x, function(ii) {
        if (any(grepl(pattern, ii))) {
          as.POSIXlt(ii)
        } else {
          ii
        }
      })
      as.data.frame(tmp, stringsAsFactors = FALSE)
    },
    function(x) {
      names(x) <- gsub("\\\\.", "_", names(x))
      x
    }
  )
)
ext_format <- DataFormat$new(
  format = list(
    function(x, pattern = "\\\\d{4}-\\\\d{2}-\\\\d{2}") {
      tmp <- lapply(x, function(ii) {
        if (any(grepl(pattern, ii))) {
          as.character(ii)
        } else {
          ii
        }
      })
      as.data.frame(tmp, stringsAsFactors = FALSE)
    },
    function(x) {
      names(x) <- gsub("_", ".", names(x))
      x
    }
  )
)

# Apply R format  ---------------------------------------------------------

inst <- Data$new(data = data_ext, r_format = r_format)
data_before <- inst$getData()
inst$applyRFormat()
data_after <- inst$getData()

## Names comparison //
names(data_before)
names(data_after)

## Class comparison //
sapply(data_before, class)
sapply(data_after, class)

# Apply external format ---------------------------------------------------

Data$undebug("applyExternalFormat")
inst <- Data$new(data = data_r, ext_format = ext_format)
data_before <- inst$getData()
inst$applyExternalFormat()
data_after <- inst$getData()

## Names comparison //
names(data_before)
names(data_after)

## Class comparison //
sapply(data_before, class)
sapply(data_after, class)
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/rappster/datar}
}
\keyword{datasets}

